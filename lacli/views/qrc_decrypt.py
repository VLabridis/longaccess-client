# -*- coding: utf-8 -*-

# Resource object code
#
# Created: Tue Nov 5 15:13:15 2013
#      by: The Resource Compiler for PySide (Qt v4.8.5)
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore

qt_resource_data = "\x00\x00\x05\xafimport QtQuick 1.1\x0aFocusScope {\x0a    width: row1.width\x0a    height: row1.height\x0a    Grid {\x0a        id: row1\x0a        columns: 2\x0a        rows: 1\x0a        spacing: 10\x0a        Rectangle {\x0a            x: 0\x0a            y: 0\x0a            width: text1.width + 10\x0a            height: text_input1.height+5\x0a            color: \x22#000000\x22\x0a            radius: 99\x0a            border.width: 1\x0a            border.color: \x22#000000\x22\x0a\x0a            Text {\x0a                id: text1\x0a                x: 8\x0a                y: 0\x0a                color: \x22#ffffff\x22\x0a\x0a                text: \x22A\x22\x0a                anchors.verticalCenterOffset: 0\x0a                anchors.horizontalCenterOffset: 0\x0a                anchors.topMargin: 0\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0a                anchors.verticalCenter: parent.verticalCenter\x0a                anchors.top: parent.top\x0a                font.pointSize: 11\x0a                verticalAlignment: Text.AlignVCenter\x0a            }\x0a        }\x0a        Rectangle {\x0a            width: text_input1.width +5\x0a            height: text_input1.height+5\x0a            color: \x22#00000000\x22\x0a\x0a            Text {\x0a                id: text_input1\x0a                focus: true\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0a                anchors.verticalCenter: parent.verticalCenter\x0a                font.pointSize: 12\x0a                font.family: \x22Consolas\x22\x0a                text: \x22your key id\x22\x0a\x0a            }\x0a        }\x0a    }\x0a}\x0a\x00\x00\x03Zimport QtQuick 1.1\x0a\x0aRectangle {\x0a    id: rectangle1\x0a    width: column1.width\x0a    height: column1.height\x0a\x0a    color: \x22#ffffff\x22\x0a    signal decrypt(string key, string path)\x0a    property alias folder: key_input.folder\x0a    Column {\x0a        id: column1\x0a        x: 0\x0a        y: 0\x0a        spacing: 10\x0a        Text {\x0a            text: \x22Please input the key from your certificate:\x22\x0a        }\x0a        KeyInput {\x0a            id: key_input\x0a        }\x0a        MouseArea {\x0a            id: mousearea1\x0a            width: 100\x0a            height: 100\x0a\x0a        }\x0a    }\x0a\x0a    Connections {\x0a        target: key_input.button\x0a        onButtonClicked: {\x0a            var key=''\x0a            for (var i=0; i<key_input.model.count; i++) {\x0a                key += key_input.model.get(i).value\x0a            }\x0a            rectangle1.decrypt(key, folder)\x0a            Qt.quit()\x0a\x0a        }\x0a    }\x0a}\x0a\x00\x00\x06>import QtQuick 1.1\x0a\x0aRectangle {\x0a    id: button\x0a\x0a    property alias text: textItem.text\x0a    property bool enabled: false\x0a    property alias radius: button.radius\x0a    property alias font: textItem.font\x0a    signal buttonClicked()\x0a\x0a    width: textItem.width + 40; height: textItem.height + 10\x0a    border.width: 1\x0a    radius: height/4\x0a    smooth: true\x0a\x0a    gradient: Gradient {\x0a        GradientStop { id: topGrad; position: 0.0; color: \x22#333\x22 }\x0a        GradientStop { id: bottomGrad; position: 1.0; color: \x22#000\x22 }\x0a    }\x0a\x0a    Text {\x0a        id: textItem\x0a        x: parent.width/2 - width/2; y: parent.height/2 - height/2\x0a        font.pixelSize: 18\x0a        color: \x22white\x22\x0a        style: Text.Raised\x0a    }\x0a\x0a    MouseArea {\x0a        id: mouseArea\x0a        anchors.fill: parent\x0a        enabled: false\x0a    }\x0a\x0a    states: [\x0a    State {\x0a        name: \x22pressed\x22; when: mouseArea.pressed && mouseArea.containsMouse\x0a        PropertyChanges { target: topGrad; color: \x22darkblue\x22 }\x0a        PropertyChanges { target: bottomGrad; color: \x22lightsteelblue\x22 }\x0a        PropertyChanges { target: textItem; x: textItem.x + 1; y: textItem.y + 1; font.family: \x22Open Sans\x22; explicit: true }\x0a        PropertyChanges { target: mouseArea; enabled: true; onClicked: button.buttonClicked() }\x0a    },\x0a    State {\x0a        name: \x22Enabled\x22\x0a        when: button.enabled\x0a        PropertyChanges { target: topGrad; position: 0; color: \x22darkblue\x22 }\x0a        PropertyChanges { target: bottomGrad; position: 1; color: \x22lightsteelblue\x22 }\x0a        PropertyChanges { target: mouseArea; enabled: true; onClicked: button.buttonClicked() }\x0a    }\x0a    ]\x0a}\x0a\x00\x00\x09\xbfimport QtQuick 1.1\x0a\x0a\x0aColumn {\x0a    id: column1\x0a    spacing: 20\x0a    IdRow { }\x0a    property alias button: button1\x0a    property alias model: mymodel\x0a    property alias folder: text_input1.text\x0a\x0a\x0a    ListView {\x0a\x0a        boundsBehavior: Flickable.StopAtBounds\x0a        id: list\x0a        width: 300\x0a        height: 200\x0a        contentHeight: list.height\x0a        contentWidth: list.width\x0a        focus: true\x0a\x0a        spacing: 30\x0a        delegate: KeyRow {\x0a            id: foo\x0a            Connections {\x0a                onAcceptableChanged: {\x0a                    mymodel.setProperty(index, 'complete', foo.acceptable)\x0a                    button1.rowChanged()\x0a                    if (foo.acceptable)\x0a                        list.incrementCurrentIndex()\x0a                }\x0a\x0a                onRowChanged: {\x0a                    mymodel.setProperty(index, 'value', val)\x0a                }\x0a            }}\x0a        model: ListModel {\x0a            id: mymodel\x0a            ListElement {\x0a                name: \x22B\x22\x0a                complete: false\x0a                value: \x22\x22\x0a            }\x0a            ListElement {\x0a                name: \x22C\x22\x0a                complete: false\x0a                value: \x22\x22\x0a            }\x0a            ListElement {\x0a                name: \x22D\x22\x0a                complete: false\x0a                value:\x22\x22\x0a            }\x0a            ListElement {\x0a                name: \x22E\x22\x0a                complete: false\x0a                value:\x22\x22\x0a            }\x0a        }\x0a    }\x0aRow{\x0a    Rectangle {\x0a        width: text_input1.width\x0a        height: text_input1.height\x0a        color: \x22#dbd6d6\x22\x0a        border.color: \x22#000000\x22\x0a        TextInput {\x0a            id: text_input1\x0a            width: 200\x0a            anchors.horizontalCenter: parent.horizontalCenter\x0a            anchors.verticalCenter: parent.verticalCenter\x0a            focus: true\x0a            font.pointSize: 12\x0a            onTextChanged: button1.rowChanged()\x0a        }\x0a        border.width: 1\x0a    }\x0a\x0a    Button {\x0a        id: button2\x0a        text: \x22Browse\x22\x0a        enabled: true\x0a        Connections {\x0a            onButtonClicked: text_input1.text = destsel.getDirectory()\x0a        }\x0a        font.pixelSize: 10\x0a        radius: 2\x0a    }\x0a}\x0a\x0a    Button {\x0a        id: button1\x0a        text: \x22Decrypt\x22\x0a        signal rowChanged()\x0a        onRowChanged: {\x0a            enabled = destsel.dirExists(text_input1.text)\x0a            for (var i=0; i< mymodel.count; i++) {\x0a                if (!mymodel.get(i).complete)\x0a                    enabled = false\x0a            }\x0a        }\x0a    }\x0a\x0a}\x0a\x00\x00\x072import QtQuick 1.1\x0aFocusScope {\x0a    property bool complete: false\x0a    property bool acceptable: text_input1.acceptableInput\x0a    property string val: text_input1.text.replace(/[ .]/g, '')\x0a    height: text_input1.height\x0a    signal rowChanged()\x0a    Grid {\x0a        id: row1\x0a        anchors.fill: parent\x0a        columns: 2\x0a        rows: 1\x0a        spacing: 10\x0a        height: 50\x0a        Rectangle {\x0a            x: 0\x0a            y: 0\x0a            width: text1.width + 10\x0a            height: text_input1.height+5\x0a            color: \x22#000000\x22\x0a            radius: 99\x0a            border.width: 1\x0a            border.color: \x22#000000\x22\x0a\x0a            Text {\x0a                id: text1\x0a                x: 8\x0a                y: 0\x0a                color: \x22#ffffff\x22\x0a\x0a                text: name\x0a                anchors.verticalCenterOffset: 0\x0a                anchors.horizontalCenterOffset: 0\x0a                anchors.topMargin: 0\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0a                anchors.verticalCenter: parent.verticalCenter\x0a                anchors.top: parent.top\x0a                font.pointSize: 11\x0a                verticalAlignment: Text.AlignVCenter\x0a            }\x0a        }\x0a        Rectangle {\x0a            width: text_input1.width +5\x0a            height: text_input1.height+5\x0a            color: \x22#dbd6d6\x22\x0a            border.width: 1\x0a            border.color: \x22#000000\x22\x0a\x0a            TextInput {\x0a                id: text_input1\x0a                focus: true\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0a                anchors.verticalCenter: parent.verticalCenter\x0a                font.pointSize: 12\x0a                font.family: \x22Consolas\x22\x0a                inputMask: \x22HH HH HH HH . HH HH HH HH\x22\x0a\x0a            }\x0a        }\x0a    }\x0a    Connections {\x0a        target: text_input1\x0a        onTextChanged: rowChanged()\x0a    }\x0a}\x0a"
qt_resource_name = "\x00\x02\x00\x00\x07\xb9\x00u\x00i\x00\x09\x09j\xcb\x1c\x00I\x00d\x00R\x00o\x00w\x00.\x00q\x00m\x00l\x00\x08\x0c\x97]\x1c\x00c\x00e\x00r\x00t\x00.\x00q\x00m\x00l\x00\x0a\x0bhq\x5c\x00B\x00u\x00t\x00t\x00o\x00n\x00.\x00q\x00m\x00l\x00\x0c\x0d\xfe\x98\x9c\x00K\x00e\x00y\x00I\x00n\x00p\x00u\x00t\x00.\x00q\x00m\x00l\x00\x0a\x09dq\xfc\x00K\x00e\x00y\x00R\x00o\x00w\x00.\x00q\x00m\x00l"
qt_resource_struct = "\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x02\x00\x00\x00p\x00\x00\x00\x00\x00\x01\x00\x00\x19\x16\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x01\x00\x00\x09\x11\x00\x00\x00\x22\x00\x00\x00\x00\x00\x01\x00\x00\x05\xb3\x00\x00\x00R\x00\x00\x00\x00\x00\x01\x00\x00\x0fS"
def qInitResources():
    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

def qCleanupResources():
    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

qInitResources()
